
@use "variables" as *;



///
/// Prevents pointer events on icons within buttons to ensure button
/// functionality.
///
button {
    i {
        pointer-events: none;
    }
}


///
/// Basic button styling with scalable design considerations.
///
.btn {
    display: inline-block;
    padding: 6px 12px;
    font-size: 18px;
    font-weight: 400;
    line-height: 1.42857143;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    -ms-touch-action: manipulation;
    touch-action: manipulation;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    border-radius: 4px;
    color: white;
    background-color: $icon_color_default;
}


///
/// Mixin for creating a circular icon button with customizable properties.
/// 
/// @param {Number} $size [40px] - Diameter of the button.
/// @param {Color} $bg-color [#f5f5f5] - Background color of the button.
/// @param {Color} $hover-color [darken($bg-color, 10%)] - Color on hover.
/// 
/// @example
/// @include icon-button(50px, #ccc); // Creates a 50px diameter grey button.
///
@mixin icon-button(
    $size: 40px,
    $bg-color: #f5f5f5,
    $hover-color: darken($bg-color, 10%)
) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: $size;
    height: $size;
    background-color: $bg-color;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    transition: background-color 0.3s;

    &:hover {
        background-color: $hover-color;
    }

    // Icon size can be adjusted relative to the button size
    i {
        font-size: calc($size * 0.6);
    }
}

///
/// Example class using the icon-button mixin for quick use.
///
.icon-btn {
    @include icon-button(40px, #f5f5f5);
}
